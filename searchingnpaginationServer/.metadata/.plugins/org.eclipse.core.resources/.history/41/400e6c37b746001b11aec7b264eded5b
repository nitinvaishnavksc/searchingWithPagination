package com.nitin.searchingnpagination.util;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import org.springframework.beans.factory.annotation.Autowired;

public class JpaJPQLUtil {
	
	@Autowired
	private EntityManager em;
	
	@SuppressWarnings("rawtypes") 
	public  <T> HashMap<String, Object> JPQLnitinQueryFeatures (String queryString, String queryCountString, 
			HashMap<String, Object> paramter, Class<T> className, Integer page, Integer size)
	{ 
		Query query = em.createQuery(queryString); 
		//Declaration Part For Local Scope 
		Query queryTotal = null; 
		int pageNumber = 0,pageSize = 0,totalpageNumber = 0;
		long countResult = 0L; 
		//Declaration Part For Local Scope
		if(page!=null && size!=null && queryCountString!=null){
			queryTotal = em.createQuery(queryCountString); 
			pageNumber = page+1;
			pageSize = size;
			query.setFirstResult((pageNumber-1)* pageSize); 
			query.setMaxResults(pageSize);
			}  
		if(paramter!=null) {
			Set set = paramter.entrySet();
			Iterator iterator = set.iterator(); 
			while(iterator.hasNext()) {
			Map.Entry mentry = (Map.Entry)iterator.next(); 
			query.setParameter(mentry.getRey().toString(), mentry.getValue()); 
			if(page!=null && size!=null && queryCountString!=null) { 
			queryTotal.setParameter(mentry.getKey().toString(), mentry.getValue()); 
			}
		  }
		) 
		if(page!=null && size!=null && queryCountString!=null) { 
		countResult = (long)queryTotal.getSingleResult(); totalpageNumber = (int) ((countResult / pageSize) + 1); 
		}


}
