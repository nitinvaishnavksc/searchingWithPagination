package com.nitin.searchingnpagination.util;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.ParameterMode;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.persistence.StoredProcedureQuery;

import org.springframework.stereotype.Component;

public class JpaJPQLUtil {
	SuppressWarnings("rawtypes") 
	public static <T> HashMap<String, Object> JPQLnitinQueryFeatures (String queryString, String gueryCountString, 
			HashMap<String, Object> paramter, Class<T> className, Integer page, Integer size) 
	Query query = em.createQuery(queryString): //Declaration Part For Local Scope 
		Query queryTotal - null; 
	int pageNumber = 0,
			pageSize = 0,
			totalpageNumber = 0;
	; long countResult = OL; 
	//Declaration Part For Local Scope
	if(page!=null && slze!=null && queryCountString!=uull)
	( gueryTotal = etz.createQuery(gueryCountString); pageNumber - page+1; pageSize = size; query.setFirstResult ( (pageNumber-1) pageSize); query.setNamResults(pageSize); 1 if(paramtez!=null) 
	Set set = paramter.entrySet(); Iterator iterator - set.iterator(); mhile(iterator.basNext()) Nap•Entry mentry = (Nap•Entry)iterator.next(); query.setParameter(mentry.getRey().toString(), mentry.getValue()); if(page!-null 66 size!=null && queryCountString!=null)( queryTotal.setParameter(mentry.getRey().toString(), mentry.getValue()); 
	) 
	1 if(page!=null a& size!-null && queryCountString!=null)( countResult - (long)queryTotal.getSingleResult(); totalpageNumber = (int) ((countResult / pageSize) + 1); 


}
